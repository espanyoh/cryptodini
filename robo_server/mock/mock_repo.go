// Code generated by MockGen. DO NOT EDIT.
// Source: ./robo_server/repo.go

// Package mock_robo_server is a generated GoMock package.
package mock_robo_server

import (
	models "cryptodini/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepoService is a mock of RepoService interface
type MockRepoService struct {
	ctrl     *gomock.Controller
	recorder *MockRepoServiceMockRecorder
}

// MockRepoServiceMockRecorder is the mock recorder for MockRepoService
type MockRepoServiceMockRecorder struct {
	mock *MockRepoService
}

// NewMockRepoService creates a new mock instance
func NewMockRepoService(ctrl *gomock.Controller) *MockRepoService {
	mock := &MockRepoService{ctrl: ctrl}
	mock.recorder = &MockRepoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepoService) EXPECT() *MockRepoServiceMockRecorder {
	return m.recorder
}

// GetBestAssets mocks base method
func (m *MockRepoService) GetBestAssets() ([]models.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBestAssets")
	ret0, _ := ret[0].([]models.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBestAssets indicates an expected call of GetBestAssets
func (mr *MockRepoServiceMockRecorder) GetBestAssets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBestAssets", reflect.TypeOf((*MockRepoService)(nil).GetBestAssets))
}

// ListWorstAssets mocks base method
func (m *MockRepoService) ListWorstAssets() ([]models.Asset, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListWorstAssets")
	ret0, _ := ret[0].([]models.Asset)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListWorstAssets indicates an expected call of ListWorstAssets
func (mr *MockRepoServiceMockRecorder) ListWorstAssets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListWorstAssets", reflect.TypeOf((*MockRepoService)(nil).ListWorstAssets))
}
